libr
page <- readr::read_html(url)
library(rvest)
url <- "https://www.chess.com/events/2024-titled-tuesday-blitz-june-18-late/games"
page <- rvest::read_html(url)
page
library(dplyr)
page %>%
htm_node("select")
page %>%
html_node("select")
page %>%
html_nodes("select")
library(httr)
page <- rvest::read_html(GET(url))
page
page <- rvest::read_html(url)
page
page %>%
html_nodes("select.minimal-select-select")
page %>%
html_node("select.minimal-select-select")
a = page %>%
html_node("select.minimal-select-select")
b <- a %>%
html_nodes("option")
b
page %>%
html_element("select")
page$node
page$doc
read_html(GET(url))
read_html(url)
read_html(url)[1]
read_html(url)
page
url <- "https://www.chess.com/events/2024-titled-tuesday-blitz-june-18-late/games"
page <- rvest::read_html(url)
values <- page %>%
html_element("select")
values
usethis::use_package("magrittr")
usethis::use_package("tibble")
usethis::use_readme_rmd()
url <- "https://www.chess.com/events/220/0"
hdr <- HEAD(url)
hdr
filename <- gsub(".*name=", "", headers(hdr)$`content-disposition`)
filename
hds
hdr
hdr$content
hdr$date
hdr$handle
hdr$cookies
hdr$url
url <- "https://www.chess.com/events/220/0"
url
hdr$status_code
hdr$date
url <- "https://www.chess.com/events/7395/0"
hdr <- HEAD(url)
filename <- gsub(".*name=", "", headers(hdr)$`content-disposition`)
hdr
hdr$status_code
url <- "https://www.chess.com/events/pgn/7395/0"
hdr <- HEAD(url)
filename <- gsub(".*name=", "", headers(hdr)$`content-disposition`)
hdr
hdr$status_code
hdr$content
filename
headers(hdr)
hdr$content
hdr$headers
hdr$all_headers
url <- "https://www.chess.com/events/pgn/7395/0"
temp <- tempfile(fileext = ".pgn")
download.file(url, temp)
temp
read_file(temp)
readr::read_file(temp)
read.table(temp, quote= "", sep= "\n", stringsAsFactors = FALSE)
read.table(temp)
read_table(temp)
readr::read_table(temp)
url
download.file(url, temp, method = "curl")
temp
readr::read_table(temp)
url
GET(url)
url <- "https://www.chess.com/login_and_go?returnUrl=https://www.chess.com/events/pgn/7395/0"
download.file(url, temp)
readr::read_table(temp)
GET(url)
hdr <- HEAD(url)
hdr
headers(hdr)
url <- "https://www.chess.com/login_and_go"
GET(url)
HEAD(url)
HEAD(url)$headers
session <- html_session(url)
session
form <- html_form(session)
form <- html_form(session)[[1]]
form
f <- set_values(
form,
email = "rigola",
password = "Ig09062001@"
)
f <- set_values(
form,
_username = "rigola",
f <- set_values(
form,
`_username` = "rigola",
`_password`` = "Ig09062001@"
)
f <- set_values(
form,
`_username` = "rigola",
`_password` = "Ig09062001@"
)
main_page <- submit_form(session, f)
dnurl <- "https://www.chess.com/login_and_go?returnUrl=https://www.chess.com/events/pgn/7395/0"
download <- jump_to(main_page,dnurl)
download
writeBin(download$response$content, basename(dn_url))
writeBin(download$response$content, basename(dnurl))
url <- "https://api.chess.com/pub/tournament/early-titled-tuesday-blitz-december-27-2022-3663540/11/1"
library(jsonlite)
readJSON(url)
jsonlite::read_json(url)
d <- jsonlite::read_json(url)
d$players
d$games
d$games[[1]]
library(rvest)
url <- "https://www.chess.com/tournament/live/titled-tuesdays?&page=1"
library(rvest)
g <- read_html(url)
g
html_nodes(g, "[class=tournament-live-name]")
html_nodes(g, "a.tournament-live-name")
html_nodes(g, "a.tournaments-live-name")
html_nodes(g, "a.tournaments-live-name") %>%
html_attr("href")
library(roxygeb2)
library(roxygen2)
roxygen2::roxygenise()
devtools:::run_examples()
usethis::use_package("rvest")
seq_len(1)
seq_len(2)
seq_len(-1)
seq_len(0)
stringr::str_extract("https://www.chess.com/tournament/live/late-titled-tuesday-blitz-june-18-2024-4829185", "/*")
stringr::str_extract("https://www.chess.com/tournament/live/late-titled-tuesday-blitz-june-18-2024-4829185", "/.*")
stringr::str_extract("https://www.chess.com/tournament/live/late-titled-tuesday-blitz-june-18-2024-4829185", "([^/]+$)")
devtools::load_all()
get_api_url(1)
usethis::use_package("purrr")
devtools::load_all()
get_api_url(1)
get_api_url(2)
get_api_url(20)
devtools::load_all()
get_api_url(20)
tournaments <- get_tournaments()
devtools::load_all()
tournaments <- get_tournaments()
api_calls <- paste0("https://api.chess.com/pub/tournament/", tournaments)
api_calls
GET(api_calls[1])
jsonlite::read_json(api_calls[1])
usethis::use_package("jsonlite")
jsonlite::read_json(api_calls)
jsonlite::read_json(api_calls[1])
jsonlite::read_json(api_calls[2])
purrr::map_chr(
api_calls,
~ jsonlite::read_json(.)$rounds
)
purrr::map(
api_calls,
~ jsonlite::read_json(.)$rounds
)
purrr::map(
api_calls,
~ jsonlite::read_json(.)$rounds[[1]]
)
jsonlite::read_json(api_calls[[1]])$rounds[[1]]
jsonlite::read_json(api_calls[[2]])$rounds[[1]]
jsonlite::read_json(api_calls[[400]])$rounds[[1]]
api_calls
api_calls <- purrr::map_chr(
api_calls,
~ jsonlite::read_json(.)$rounds[[1]]
)
api_calls <- purrr::map_chr(
api_calls,
function(url) {
message(url)
jsonlite::read_json(url)$rounds[[1]]
}
)
read_json(api_calls[1])
read_json(api_calls[1])$groups
read_json(api_calls[10])$groups
read_json(api_calls[40])$groups
read_json(api_calls[400])$groups
download_urls <- paste0(api_calls, "/1")
download_urls
jsonlite::read_json(download_urls[1])
l <- jsonlite::read_json(download_urls[1])
usethis::use_import_from("magrittr", "%>%")
l$games
l$games %>%
bind_rows()
l$games %>%
rbind()
jsonlite::read_json(download_urls[1], simplifyVector = TRUE)
l <- jsonlite::read_json(download_urls[1], simplifyVector = TRUE)
l$games
l$games %>%
dim()
l$players
download_urls
download_urls %>%
stringr::str_split(simplify = TRUE)
download_urls %>%
stringr::str_split("/", simplify = TRUE)
l$games$tournament
list("a" = list("x" = 1, "y" = 2), "b" = list("x" = 10, "y" = 11))
l <- list("a" = list("x" = 1, "y" = 2), "b" = list("x" = 10, "y" = 11))
lapply(l, "$x")
lapply(l, `$x`)
lapply(l, `$`, x)
lapply(l, `$`, y)
lapply(l, `$`, "y")
lapply(l, `$`, "x")
lapply(l, function(x) x$x)
usethis::use_package("dplyr")
devtools::load_all()
df <- titled_tuesday()
devtools::load_all()
df <- titled_tuesday()
download_urls <- get_download_url()
dat <- purrr::map(
download_urls,
function(url){
message(paste("Downloading", url))
file <- jsonlite::read_json(url, simplifyVector = TRUE)
file$players$tournament <- url
}
)
dat
names(dat)
dat[[1]]
dat <- purrr::map(
download_urls,
function(url){
message(paste("Downloading", url))
file <- jsonlite::read_json(url, simplifyVector = TRUE)
file$players$tournament <- url
file
}
)
dat
games <- lapply(dat, function(x) x$games) %>%
dplyr::bind_rows()
players <- lapply(dat, function(x) x$players) %>%
dplyr::bind_rows()
games
players
dat$players %>%
names()
players$points
players$points
players$is_winner
library(ggplot2)
dat <- players %>%
summarise(
wins = sum(is_winner), .by = "username"
)
dat <- players %>%
dplyr::summarise(
wins = sum(is_winner), .by = "username"
)
dat
dat <- dat %>%
arrange(-wins)
dat <- dat %>%
dplyr::arrange(-wins)
dat$username <- factor(dat$username, levels = dat$username, ordered = TRUE)
ggplot(dplyr::filter(dat, wins > 20), aes(x = wins, y = username)) +
geom_col()
dat <- dat %>%
dplyr::arrange(wins)
dat$username <- factor(dat$username, levels = dat$username, ordered = TRUE)
ggplot(dplyr::filter(dat, wins > 20), aes(x = wins, y = username)) +
geom_col()
ggplot(dplyr::filter(dat, wins > 10), aes(x = wins, y = username)) +
geom_col()
ggplot(dplyr::filter(dat, wins > 10), aes(x = wins, y = username)) +
geom_col(fill = "darkblue") +
xlab("Number of TT wins") + ylab("")
ggplot(dplyr::filter(dat, wins > 10), aes(x = wins, y = username)) +
geom_col(fill = "darkblue") +
xlab("Number of TT wins") + ylab("") +
theme_minimal()
ggplot(dplyr::filter(dat, wins > 9), aes(x = wins, y = username)) +
geom_col(fill = "darkblue") +
xlab("Number of TT wins") + ylab("") +
theme_minimal()
ggplot(dplyr::filter(dat, wins > 9), aes(x = wins, y = username)) +
geom_col(fill = "darkblue") +
xlab("Number of TT wins") + ylab("") +
theme_minimal()
ggsave("C:/Users/User/Downloads/tt_wins.png")
ggsave("C:/Users/User/Downloads/tt_wins.jpeg")
devtools::check()
usethis::use_package("stringr")
usethis::use_mit_license()
devtools::check()
dat <- titled_tuesday()
dat$games
dat$players
dat$games
dat$games[length(dat$games)]
dat$games[length(dat$games),]
dat$games[1,]
dat$games[2,]
dat$games[200,]
dat$games[400,]
nrow(dat$games)
dat$games$tournament %>%
unique()
dat$games[50000,]
dat$games$pgn
dat %>%
nrow()
dat$games %>%
nrow()
dat$players$username %>%
unique() %>%
length()
dat$players$tournament %>%
unique() %>%
length()
devtools::install_github("IgorRigolon/titled.tuesday")
devtools::install_github("IgorRigolon/titled.tuesday")
